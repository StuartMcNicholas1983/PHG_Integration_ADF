{
	"name": "PL_Control",
	"properties": {
		"activities": [
			{
				"name": "SequenceGroups - Reference",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SequenceGroup - Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[spGet_PipelineParameters_SequenceGroups]",
						"storedProcedureParameters": {
							"entityType": {
								"type": "String",
								"value": "Reference"
							},
							"pipeline": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.PipelineName",
									"type": "Expression"
								}
							},
							"isSequence": {
								"type": "Boolean",
								"value": {
									"value": "@greaterOrEquals(indexOf(pipeline().parameters.SequenceList,'[R]'),0)\n",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_Control",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SequenceGroup - Reference",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "SequenceGroups - Reference",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('SequenceGroups - Reference').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Reference Entities",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_ReferenceEntities",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"PipelineName": {
										"value": "@item().Pipeline",
										"type": "Expression"
									},
									"SourceSystemName": {
										"value": "@item().SrcSystem",
										"type": "Expression"
									},
									"SequenceGroup": {
										"value": "@item().SequenceGroup",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "SequenceGroups - Core",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SequenceGroup - Reference",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[spGet_PipelineParameters_SequenceGroups]",
						"storedProcedureParameters": {
							"entityType": {
								"type": "String",
								"value": "Core"
							},
							"pipeline": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.PipelineName",
									"type": "Expression"
								}
							},
							"isSequence": {
								"type": "Boolean",
								"value": {
									"value": "@greaterOrEquals(indexOf(pipeline().parameters.SequenceList,'[C]'),0)\n",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_Control",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SequenceGroup - Core",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "SequenceGroups - Core",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('SequenceGroups - Core').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Core Entities",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_CoreEntities",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"PipelineName": {
										"value": "@item().Pipeline",
										"type": "Expression"
									},
									"SourceSystemName": {
										"value": "@item().SrcSystem",
										"type": "Expression"
									},
									"SequenceGroup": {
										"value": "@item().SequenceGroup",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "SequenceGroups - Lookup",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "Reset PipelineRunsToday",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[spGet_PipelineParameters_SequenceGroups]",
						"storedProcedureParameters": {
							"entityType": {
								"type": "String",
								"value": "Lookup"
							},
							"pipeline": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.PipelineName",
									"type": "Expression"
								}
							},
							"isSequence": {
								"type": "Boolean",
								"value": {
									"value": "@greaterOrEquals(indexOf(pipeline().parameters.SequenceList,'[L]'),0)\n",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_Control",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SequenceGroup - Lookup",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "SequenceGroups - Lookup",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('SequenceGroups - Lookup').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Lookup Entities",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_LookupEntities",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"PipelineName": {
										"value": "@item().Pipeline",
										"type": "Expression"
									},
									"SourceSystemName": {
										"value": "@item().SrcSystem",
										"type": "Expression"
									},
									"SequenceGroup": {
										"value": "@item().SequenceGroup",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "SequenceGroups - Delete",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SequenceGroup - Transactional",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[spGet_PipelineParameters_SequenceGroups]",
						"storedProcedureParameters": {
							"entityType": {
								"type": "String",
								"value": "Delete"
							},
							"pipeline": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.PipelineName",
									"type": "Expression"
								}
							},
							"isSequence": {
								"type": "Boolean",
								"value": {
									"value": "@greaterOrEquals(indexOf(pipeline().parameters.SequenceList,'[D]'),0)\n",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_Control",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SequenceGroup - Delete",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "SequenceGroups - Delete",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('SequenceGroups - Delete').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Delete Entities",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_DeleteEntities",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"PipelineName": {
										"value": "@item().Pipeline",
										"type": "Expression"
									},
									"SourceSystemName": {
										"value": "@item().SrcSystem",
										"type": "Expression"
									},
									"SequenceGroup": {
										"value": "@item().SequenceGroup",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "Reset PipelineRunsToday",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "RunStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spUpdate_PipelineParameters_PipelineRunsToday]"
				},
				"linkedServiceName": {
					"referenceName": "Control",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "SequenceGroups - Transactional",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "SequenceGroup - Core",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[spGet_PipelineParameters_SequenceGroups]",
						"storedProcedureParameters": {
							"entityType": {
								"type": "String",
								"value": "Transactional"
							},
							"pipeline": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.PipelineName",
									"type": "Expression"
								}
							},
							"isSequence": {
								"type": "Boolean",
								"value": {
									"value": "@greaterOrEquals(indexOf(pipeline().parameters.SequenceList,'[T]'),0)\n",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_Control",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "SequenceGroup - Transactional",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "SequenceGroups - Transactional",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('SequenceGroups - Transactional').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Transactional Entities",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "PL_TransactionalEntities",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"PipelineName": {
										"value": "@item().Pipeline",
										"type": "Expression"
									},
									"SourceSystemName": {
										"value": "@item().SrcSystem",
										"type": "Expression"
									},
									"SequenceGroup": {
										"value": "@item().SequenceGroup",
										"type": "Expression"
									}
								}
							}
						}
					]
				}
			},
			{
				"name": "RunStart",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunStart",
					"value": {
						"value": "@string(utcNow())",
						"type": "Expression"
					}
				}
			},
			{
				"name": "RunEnd",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "SequenceGroup - Delete",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunEnd",
					"value": {
						"value": "@string(utcNow())",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Duration_SS",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "RunEnd",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"variableName": "Duration_SS",
					"value": {
						"value": "@string(div(sub(ticks(formatDateTime(variables('RunEnd'))),ticks(formatDateTime(variables('RunStart')))),10000000))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "PipelineAuditLog",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "Duration_SS",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "SELECT \n'@{pipeline().DataFactory}' as DataFactory,\n'@{pipeline().Pipeline}' as Pipeline,\n'@{pipeline().GroupId}' as GroupID,\n'@{pipeline().RunId}' as RunID,\n'@{pipeline().TriggerId}' as TriggerID,\n'@{pipeline().TriggerName}' as TriggerName,\n'@{pipeline().TriggerTime}' as TriggerTime,\n'@{pipeline().TriggerType}' as TriggerType,\n'@{pipeline()?.TriggeredByPipelineName}' as TriggeredByPipelineName,\n'@{pipeline()?.TriggeredByPipelineRunId}' as TriggeredByPipelineRunID,\n'@{variables('RunStart')}' as RunStart,\n'@{variables('RunEnd')}' as RunEnd,\n'@{variables('Duration_SS')}' as Duration_SS,\n'Succeeded' as Status\n\n\n",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "DS_SQL_Control",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "DS_SQL_Control_Tbl",
						"type": "DatasetReference",
						"parameters": {
							"SchemaName": "dbo",
							"TableName": "PipelineAuditLog"
						}
					}
				]
			}
		],
		"concurrency": 1,
		"parameters": {
			"PipelineName": {
				"type": "string",
				"defaultValue": "OH_D365_DataSync"
			},
			"SequenceList": {
				"type": "string",
				"defaultValue": "[L],[R],[C],[T],[D]"
			}
		},
		"variables": {
			"RunStart": {
				"type": "String"
			},
			"RunEnd": {
				"type": "String"
			},
			"Duration_SS": {
				"type": "String"
			}
		},
		"folder": {
			"name": "OH_D365_DataSync"
		},
		"annotations": [],
		"lastPublishTime": "2023-02-17T13:03:59Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}