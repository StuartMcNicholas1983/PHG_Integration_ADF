{
	"name": "DF_StagingToTransformed_Property",
	"properties": {
		"folder": {
			"name": "OH_D365_DataSync/Core"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Datalake_Delimited",
						"type": "DatasetReference"
					},
					"name": "Staging"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Datalake_Delimited",
						"type": "DatasetReference"
					},
					"name": "Transformed"
				}
			],
			"transformations": [
				{
					"name": "SelectColumnsForSink"
				}
			],
			"scriptLines": [
				"parameters{",
				"     DatalakeFilename as string",
				"}",
				"source(output(",
				"          phg_integrationkey as string,",
				"          phg_addressline1 as string,",
				"          phg_addressline2 as string,",
				"          phg_addressline3 as string,",
				"          phg_addressline4 as string,",
				"          phg_addressline5 as string,",
				"          phg_postcode as string,",
				"          phg_name as string,",
				"          phg_managementareaid as string,",
				"          phg_buildtypeid as string,",
				"          modified as timestamp,",
				"          created as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Staging",
				"Staging select(mapColumn(",
				"          phg_integrationkey,",
				"          phg_addressline1,",
				"          phg_addressline2,",
				"          phg_addressline3,",
				"          phg_addressline4,",
				"          phg_addressline5,",
				"          phg_postcode,",
				"          phg_name",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumnsForSink",
				"SelectColumnsForSink sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     partitionFileNames:[($DatalakeFilename)],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     partitionBy('hash', 1)) ~> Transformed"
			]
		}
	}
}