{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Datalake_PipeDelimited",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Dataverse",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "AlterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          phg_integrationkey as string,",
				"          phg_addressline1 as string,",
				"          phg_addressline2 as string,",
				"          phg_addressline3 as string,",
				"          phg_addressline4 as string,",
				"          phg_postcode as string,",
				"          phg_name as string,",
				"          phg_uprn as string,",
				"          phg_propertystatus as string,",
				"          phg_substatus as string,",
				"          phg_propertytype as string,",
				"          phg_sharedownership as boolean,",
				"          phg_numberoffloors as string,",
				"          phg_propertyfloorlevel as boolean,",
				"          phg_numberofbedrooms as string,",
				"          phg_numberofbathrooms as string,",
				"          phg_numberofreceptionrooms as string,",
				"          phg_maximumnumberofoccupants as string,",
				"          phg_lift as boolean,",
				"          phg_anyadaptions as boolean,",
				"          phg_blockreference as string,",
				"          phg_tenancyid as string,",
				"          phg_plotnumber as boolean,",
				"          phg_builddate as string,",
				"          phg_managementareaid as string,",
				"          phg_buildtypeid as string,",
				"          phg_floorplanurl as string,",
				"          phg_parkingspace as boolean,",
				"          phg_dateoffinaldisposal as string,",
				"          phg_cookersupply as boolean,",
				"          phg_garden as boolean,",
				"          phg_parishid as string,",
				"          phg_areaid as string,",
				"          phg_subareaid as string,",
				"          phg_wardcode as string,",
				"          phg_estatecode as string,",
				"          phg_subareacode as string,",
				"          phg_gascapped as boolean,",
				"          phg_fuelservicedate as string,",
				"          phg_ownedbycustomer as boolean,",
				"          phg_ownedbyphg as short,",
				"          phg_gasmeterserialnumber as string,",
				"          phg_electricmeterserialnumber as string,",
				"          modified as string,",
				"          created as string,",
				"          phg_checksum as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source1 select(mapColumn(",
				"          phg_integrationkey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 filter(equals(phg_integrationkey,'(F)PCP34602')) ~> filter1",
				"filter1 alterRow(deleteIf(true())) ~> AlterRow1",
				"AlterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     deletable:true,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:false,",
				"     alternateKeyName: 'phg_integrationkey',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}